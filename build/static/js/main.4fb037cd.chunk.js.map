{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/numbers.js","components/App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","addName","newName","handleNewName","newNumber","handleNewNumber","type","Person","person","handleDeleteName","name","number","onClick","Persons","personsToShow","handleDeleteNameof","map","key","id","Notification","message","classNotification","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setMessage","setClassNotification","setFilter","useEffect","console","log","numbersService","length","toLowerCase","includes","event","target","preventDefault","nameObject","trim","newPerson","find","window","confirm","copy","setTimeout","catch","error","concat","personId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fb037cd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\nreturn (\r\n    <div>\r\n        {/* filtering logic is case insensitive */}\r\n        filter shown with:\r\n        <input value={props.filter} onChange={props.handleFilter} />\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\n\r\nconst PersonForm = (props) => {\r\nreturn (\r\n    <form onSubmit={props.addName}>\r\n        <div>\r\n            name: <input value={props.newName} onChange={props.handleNewName} />\r\n        </div>\r\n        <div>\r\n            number:\r\n            <input value={props.newNumber} onChange={props.handleNewNumber} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n);}\r\n\r\n\r\nexport default PersonForm;","import React from \"react\";\r\n\r\n\r\nconst Person = ({ person, handleDeleteName }) => {\r\n    return (\r\n        <div>\r\n            {person.name} : {person.number}\r\n            <button onClick={handleDeleteName}>Delete</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Persons = ({ personsToShow, handleDeleteNameof }) => {\r\n    return (\r\n        <div>\r\n            {personsToShow.map((person) => (\r\n                <Person\r\n                    key={person.name}\r\n                    person={person}\r\n                    handleDeleteName={()=>handleDeleteNameof(person.id)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Persons;","import React from \"react\";\r\n\r\nconst Notification = ({ message, classNotification }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={classNotification}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    del\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport Notification from \"./Notification\";\r\nimport numbersService from \"../services/numbers\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newNumber, setNewNumber] = useState(\"\");\r\n    const [message, setMessage] = useState(null);\r\n    const [classNotification, setClassNotification] = useState(null);\r\n    const [filter, setFilter] = useState(\"\");\r\n\r\n    // empty array [] means that the effect is only run along with the first render of the component.\r\n    useEffect(() => {\r\n        console.log(\"effect\");\r\n        numbersService.getAll().then((response) => {\r\n            setPersons(response);\r\n        });\r\n    }, []);\r\n\r\n    console.log(\"render\", persons.length, \"notes\");\r\n\r\n    const personsToShow = persons.filter((person) =>\r\n        person.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault();\r\n        const nameObject = {\r\n            // trim to avoid duplicates\r\n            name: newName.trim(),\r\n            number: newNumber.trim(),\r\n        };\r\n        const newPerson = persons.find(\r\n            (person) => person.name === nameObject.name\r\n        );\r\n\r\n        // check if entry already exists\r\n        if (newPerson) {\r\n            if (\r\n                window.confirm(\r\n                    `${nameObject.name} is already added to phonebook, replace the old number with a new one?`\r\n                )\r\n            ) {\r\n                numbersService\r\n                    .update(newPerson.id, nameObject)\r\n                    .then(() => {\r\n                        const copy = persons.map((person) => {\r\n                            if (person.id === newPerson.id) {\r\n                                person.number = nameObject.number;\r\n                            }\r\n                            return person;\r\n                        });\r\n                        setPersons(copy);\r\n                        setNewName(\"\");\r\n                        setNewNumber(\"\");\r\n                    })\r\n                    .then(() => {\r\n                        setMessage(`Changed '${nameObject.name}'`);\r\n                        setClassNotification(\"info\");\r\n                        setTimeout(() => {\r\n                            setMessage(null);\r\n                        }, 4000);\r\n                    })\r\n                    .catch((error) => {\r\n                        //  show the error message\r\n                        setMessage(`${error.response.data.error}`);\r\n                        setClassNotification(\"error\");\r\n                        setTimeout(() => {\r\n                            setMessage(null);\r\n                        }, 4000);\r\n\r\n                        console.log(error.response.data);\r\n                    });\r\n            }\r\n        } else {\r\n            numbersService\r\n                .create(nameObject)\r\n                .then((response) => {\r\n                    setPersons(persons.concat(response));\r\n                    setNewName(\"\");\r\n                    setNewNumber(\"\");\r\n                })\r\n                .then(() => {\r\n                    setMessage(`Added '${nameObject.name}'`);\r\n                    setClassNotification(\"info\");\r\n\r\n                    setTimeout(() => {\r\n                        setMessage(null);\r\n                    }, 4000);\r\n                }).catch(error => {\r\n                    //  show the error message\r\n                    setMessage(`${error.response.data.error}`);\r\n                    setClassNotification(\"error\");\r\n                    setTimeout(() => {\r\n                        setMessage(null);\r\n                    }, 4000);\r\n\r\n                    console.log(error.response.data);\r\n        })}\r\n    }\r\n\r\n    const handleDeleteNameof = (personId) => {\r\n        const person = persons.find((person) => person.id === personId);\r\n        if (window.confirm(`Do you really want to delete ${person.name}?`)) {\r\n            numbersService\r\n                .del(personId)\r\n                .then(() => {\r\n                    //  filter used to not modify the original array\r\n                    setPersons(\r\n                        persons.filter((person) => person.id !== personId)\r\n                    );\r\n                })\r\n                .catch((error) => {\r\n                    setMessage(\r\n                        `Information of '${person.name}' was already removed from server`\r\n                    );\r\n                    setClassNotification(\"error\");\r\n                    setTimeout(() => {\r\n                        setMessage(null);\r\n                    }, 4000);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleNewName = (event) => {\r\n        setNewName(event.target.value);\r\n    };\r\n    const handleNewNumber = (event) => {\r\n        setNewNumber(event.target.value);\r\n    };\r\n\r\n    const handleFilter = (event) => {\r\n        setFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification\r\n                message={message}\r\n                classNotification={classNotification}\r\n            />\r\n            <Filter filter={filter} handleFilter={handleFilter} />\r\n            <h2>Add a new</h2>\r\n            <PersonForm\r\n                addName={addName}\r\n                newName={newName}\r\n                handleNewName={handleNewName}\r\n                newNumber={newNumber}\r\n                handleNewNumber={handleNewNumber}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                personsToShow={personsToShow}\r\n                handleDeleteNameof={handleDeleteNameof}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}